local localPlayer = game.Players.LocalPlayer
local localPlayerMouse = localPlayer:GetMouse()

local guiParent = game:GetService("RunService"):IsStudio() and game.Players.LocalPlayer.PlayerGui or game.CoreGui
local scriptEnabled = true

local before_CameraMinZoom = 0
local before_CameraMaxZoom = 1024

local optionHeight = 17

local windowSize = Vector2.new(350, 240)
local windowMinimized = false

local themeSetting = 0
--[[

Dark Theme     0
Light Theme    1

]]

local aimbotKey = Enum.KeyCode.C

local THEME = {}
if themeSetting == 0 then
	THEME.TextFont_Standard = Enum.Font.Gotham
	THEME.TextFont_SemiBold = Enum.Font.GothamSemibold
	THEME.TextFont_Bold = Enum.Font.GothamBold
	
	THEME.Comment_Text_Color = Color3.fromRGB(255, 255, 255)
	THEME.Padding_TextColor = Color3.fromRGB(110, 140, 230)
	
	THEME.TextColor = Color3.fromRGB(255, 255, 255)
	THEME.HighlightedTextColor = Color3.fromRGB(255, 255, 255)
	
	THEME.Background_Color_1 = Color3.fromRGB(60, 60, 60)
	THEME.Background_Color_2 = Color3.fromRGB(45, 45, 45)
	THEME.Background_Color_3 = Color3.fromRGB(30, 30, 30)
	
	THEME.ListBackground = Color3.fromRGB(45, 45, 45)
	
	THEME.SearchIcon_Color = Color3.fromRGB(160, 160, 160)
	THEME.SearchBox_Suggestions_Background_Color = Color3.fromRGB(45, 45, 45)
	THEME.SearchBox_SuggestionsBorder_Color = Color3.fromRGB(90, 90, 90)
	
	THEME.Slider_Text_Color = Color3.fromRGB(255, 255, 255)
	THEME.Slider_Button_Color = Color3.fromRGB(255, 255, 255) -- Supposed to cover the other option
	
	THEME.TextBoxColor = Color3.fromRGB(45, 45, 45)
	
	THEME.ButtonColor = Color3.fromRGB(45, 45, 45)
	THEME.ButtonHoverColor = Color3.fromRGB(75, 75, 75)
elseif themeSetting == 1 then
	
end



-- Gui Framework
local function CreateGui(parent, name, rsesetOnSpawn, ignoreGuiInset)
	local gui = Instance.new("ScreenGui", parent)
	gui.Name = name
	
	gui.IgnoreGuiInset = false
	gui.ResetOnSpawn = false
	
	return gui
end

local function AddPadding(parent, size, text)
	local paddingText = text ~= nil and text or ""
	
	local padding = Instance.new("TextButton", parent)
	padding.Name = "Padding"
	padding.BackgroundTransparency = 1
	padding.BorderSizePixel = 0
	padding.Size = UDim2.new(1, 0, 0, size)
	padding.Font = THEME.TextFont_SemiBold
	padding.TextColor3 = THEME.Padding_TextColor
	padding.TextSize = 12
	padding.TextXAlignment = Enum.TextXAlignment.Left
	padding.TextYAlignment = Enum.TextYAlignment.Bottom
	padding.Text = "  " .. paddingText
	
	return padding
end

local function CreateFrame(parent, name, borderRounding, size, position, anchorPoint)
	local frame_Position = position ~= nil and position or UDim2.new(0, 0, 0, 0)
	local frame_AnchorPoint = anchorPoint ~= nil and anchorPoint or Vector2.new(0, 0)
	
	local frame = Instance.new("ImageLabel", parent)
	frame.Name = name
	frame.Image = "rbxassetid://3570695787"
	frame.ImageColor3 = THEME.Background_Color_1
	frame.ScaleType = Enum.ScaleType.Slice
	frame.SliceCenter = Rect.new(Vector2.new(100, 100), Vector2.new(100, 100))
	frame.SliceScale = 0.01 * borderRounding
	frame.BackgroundTransparency = 1
	frame.BorderSizePixel = 0
	frame.Active = true
	
	frame.Size = size
	frame.Position = frame_Position
	frame.AnchorPoint = frame_AnchorPoint
	
	return frame
end

local function CreateDragHandle(parent, attachedGui, name, size, position, anchorPoint, text)
	local handle_Size = size ~= nil and size or UDim2.new(1, 0, 1, 0)
	local handle_Position = position ~= nil and position or UDim2.new(0, 0, 0, 0)
	local handle_AnchorPoint = anchorPoint ~= nil and anchorPoint or Vector2.new(0, 0)
	
	local handle = Instance.new("TextButton", parent)
	handle.Name = name
	handle.Size = handle_Size
	handle.Position = handle_Position
	handle.AnchorPoint = handle_AnchorPoint
	handle.BackgroundTransparency = 1
	handle.Text = "  " .. text
	handle.TextSize = 15
	handle.Font = THEME.TextFont_SemiBold
	handle.TextXAlignment = Enum.TextXAlignment.Left
	handle.TextColor3 = THEME.TextColor
	
	local border = Instance.new("Frame", handle)
	border.Name = "TitleBorder"
	border.Size = UDim2.new(1, 0, 0, 1)
	border.Position = UDim2.new(0.5, 0, 0, 18)
	border.AnchorPoint = Vector2.new(0.5, 0)
	border.BorderSizePixel = 0
	
	local titleBorder_Gradient = Instance.new("UIGradient", border)
	border.BackgroundColor3 = Color3.new(1, 1, 1)
	titleBorder_Gradient.Transparency = NumberSequence.new{
		NumberSequenceKeypoint.new(0, 1),
		NumberSequenceKeypoint.new(0.05, 0.5),
		NumberSequenceKeypoint.new(0.95, 0.5),
		NumberSequenceKeypoint.new(1, 1)
	}
	
	local closeButton = Instance.new("ImageButton", handle)
	closeButton.Name = "CloseButton"
	closeButton.Image = "rbxassetid://4389749368"
	closeButton.Size = UDim2.new(0, 12, 0, 12)
	closeButton.AnchorPoint = Vector2.new(0, 0.5)
	closeButton.BackgroundTransparency = 1
	closeButton.AutoButtonColor = false
	closeButton.Position = UDim2.new(1, -18, 0.5, 0)
	
	local miniButton = Instance.new("ImageButton", handle)
	miniButton.Name = "MinimizeButton"
	miniButton.Image = "rbxassetid://4530358017"
	miniButton.Size = UDim2.new(0, 12, 0, 12)
	miniButton.AnchorPoint = Vector2.new(0, 0.5)
	miniButton.BackgroundTransparency = 1
	miniButton.AutoButtonColor = false
	miniButton.Position = UDim2.new(1, -37, 0.5, 0)
	
	-- Enable Disable
	miniButton.MouseButton1Click:Connect(function()
		if windowMinimized then
			windowMinimized = false
			
			parent.Options_Container.Visible = true
			parent.Size = UDim2.new(0, windowSize.X, 0, windowSize.Y)
		else
			windowMinimized = true
			
			parent.Options_Container.Visible = false
			parent.Size = UDim2.new(0, windowSize.X, 0, 18)
			
			localPlayer.CameraMinZoomDistance = before_CameraMinZoom
			localPlayer.CameraMaxZoomDistance = before_CameraMaxZoom
		end
	end)
	
	closeButton.MouseButton1Click:Connect(function()
		scriptEnabled = false
		attachedGui.Enabled = false
	end)
	
	
	
	local dragging = false
	
	handle.MouseButton1Down:Connect(function()
		dragging = true
		
		local dragStartOffset = Vector2.new(localPlayerMouse.X, localPlayerMouse.Y) - handle.AbsolutePosition
		
		repeat
			parent.Position = UDim2.new(0, localPlayerMouse.X - dragStartOffset.X, 0, localPlayerMouse.Y - dragStartOffset.Y)
			
			game:GetService("RunService").RenderStepped:Wait()
		until dragging == false
	end)
	
	handle.MouseButton1Up:Connect(function()
		dragging = false
	end)
	
	return handle
end

local function CreateScrollingFrame(parent, name, size, positionX, anchorPoint, padding)
	local container_Size = positionX ~= nil and positionX or UDim2.new(0, 0, 0, 0)
	local container_AnchorPoint = anchorPoint ~= nil and anchorPoint or Vector2.new(0, 0)
	
	local container = Instance.new("ScrollingFrame", parent)
	container.Name = name
	container.BorderSizePixel = 0
	container.BackgroundTransparency = 1
	container.ScrollingEnabled = true
	container.Size = size
	container.Position = container_Size
	container.AnchorPoint = container_AnchorPoint
	container.BottomImage = container.MidImage
	container.TopImage = container.MidImage
	container.ScrollBarThickness = 7
	
	local list = Instance.new("UIListLayout", container)
	list.SortOrder = Enum.SortOrder.LayoutOrder
	list.Padding = UDim.new(0, padding)
	
	local scrolling = false
	local engaged = false
	
	container.CanvasSize = UDim2.new(0, 0, 0, list.AbsoluteContentSize.Y + 30)
	
	container.ChildAdded:Connect(function()
		container.CanvasSize = UDim2.new(0, 0, 0, list.AbsoluteContentSize.Y + 30)
	end)
	
	container.ChildRemoved:Connect(function()
		container.CanvasSize = UDim2.new(0, 0, 0, list.AbsoluteContentSize.Y + 30)
	end)
	
	return container
end

local function CreateOption(parent, name, text, paddingLeft, highlighted)
	local option = Instance.new("Frame", parent)
	option.Name = name
	option.BackgroundTransparency = 1
	option.Size = UDim2.new(1, 0, 0, optionHeight)
	
	local option_Title = Instance.new("TextLabel", option)
	option_Title.Name = name .. "_Title"
	option_Title.BackgroundTransparency = 1
	option_Title.Size = UDim2.new(1, -paddingLeft, 1, 0)
	option_Title.Position = UDim2.new(1, 0, 0, 0)
	option_Title.AnchorPoint = Vector2.new(1, 0)
	
	option_Title.Font = THEME.TextFont_Standard
	option_Title.TextColor3 = THEME.TextColor
	option_Title.TextSize = 14
	option_Title.TextXAlignment = Enum.TextXAlignment.Left
	option_Title.Text = text
	
	if highlighted then
		option_Title.Font = THEME.TextFont_Bold
		option_Title.TextColor3 = THEME.HighlightedTextColor
	end
	
	return option, option_Title
end

local function CreateSlider(parent, sizeX, positionX, value1, value2, secondIsDefault)
	local sliderOption = secondIsDefault == true and 1 or 0
	
	
	local frame = CreateFrame(parent, "Slider", 3, UDim2.new(0, sizeX, 1, 0), UDim2.new(0, positionX, 0, 0))
	frame.ImageColor3 = THEME.Background_Color_2
	
	local sliderClickbox = Instance.new("TextButton", frame)
	sliderClickbox.Name = "ClickBox"
	sliderClickbox.BackgroundTransparency = 1
	sliderClickbox.Size = UDim2.new(1, 0, 1, 0)
	sliderClickbox.ZIndex = 2
	sliderClickbox.Text = ""
	
	local sliderButton = Instance.new("ImageButton", frame)
	sliderButton.Name = "SliderButton"
	sliderButton.Position = UDim2.new(0, 0, 0, 0)
	sliderButton.Size = UDim2.new(0.5, 0, 1, 0)
	sliderButton.BackgroundTransparency = 1
	
	sliderButton.Image = "rbxassetid://3570695787"
	sliderButton.ImageColor3 = THEME.Slider_Button_Color
	sliderButton.ScaleType = Enum.ScaleType.Slice
	sliderButton.SliceCenter = Rect.new(Vector2.new(100, 100), Vector2.new(100, 100))
	sliderButton.SliceScale = 0.02
	
	local option_1 = Instance.new("TextLabel", frame)
	option_1.Name = "Option_1"
	option_1.Size = UDim2.new(0.5, 0, 1, 0)
	option_1.Position = UDim2.new(0, 0, 0, 0)
	option_1.BackgroundTransparency = 1
	option_1.Font = THEME.TextFont_SemiBold
	option_1.TextSize = 13
	option_1.TextColor3 = THEME.Slider_Text_Color
	option_1.Text = value1
	
	local option_2 = option_1:Clone()
	option_2.Name = "Option_2"
	option_2.Parent = frame
	option_2.Position = UDim2.new(0.5, 0, 0, 0)
	option_2.Text = value2
	
	
	local sliderChanged = false
	
	local function Change()
		if sliderOption == 1 then
			sliderOption = 0
			
			local goal = {}
			goal.Position = UDim2.new(0.5, 0, 0, 0)
			
			local info = TweenInfo.new(0.2, Enum.EasingStyle.Quart, Enum.EasingDirection.InOut)
			local tween = game:GetService("TweenService"):Create(sliderButton, info, goal)
			tween:Play()
		elseif sliderOption == 0 then
			sliderOption = 1
			
			local goal = {}
			goal.Position = UDim2.new(0, 0, 0, 0)
			
			local info = TweenInfo.new(0.2, Enum.EasingStyle.Quart, Enum.EasingDirection.InOut)
			local tween = game:GetService("TweenService"):Create(sliderButton, info, goal)
			tween:Play()
		end
		
		sliderChanged = true
	end
	
	Change()
	
	sliderClickbox.MouseButton1Click:Connect(function()
		Change()
	end)
	
	local t = {}
	function t.GetValue()
		if sliderOption == 0 then
			return value1
		else
			return value2
		end
	end
	
	function t.ChangeValue(v)
		sliderOption = v
		
		Change()
	end
	
	function t.ValueChanged()
		local v = sliderChanged
		
		if sliderChanged then
			sliderChanged = false
		end
		
		return v
	end
	
	return t
end

local function CreateButton(parent, sizeX, positionX, buttonText)
	local isPressed = false
	
	local frame = CreateFrame(parent, "Button", 3, UDim2.new(0, sizeX, 1, 0), UDim2.new(0, positionX, 0, 0))
	frame.ImageColor3 = THEME.ButtonColor
	
	local button = Instance.new("TextButton", frame)
	button.Name = "ButtonClickable"
	button.Text = buttonText
	button.BackgroundTransparency = 1
	button.Font = THEME.TextFont_SemiBold
	button.TextColor3 = THEME.TextColor
	button.TextSize = 13
	button.AutoButtonColor = false
	button.Size = UDim2.new(1, 0, 1, 0)
	
	button.MouseEnter:Connect(function()
		frame.ImageColor3 = THEME.ButtonHoverColor
	end)
	
	button.MouseLeave:Connect(function()
		frame.ImageColor3 = THEME.ButtonColor
	end)
	
	button.MouseButton1Click:Connect(function()
		isPressed = true
	end)
	
	-- Return
	local returnTable = {}
	
	function returnTable.WasClicked()
		local wasPressed = isPressed
		isPressed = false
		
		return wasPressed
	end
	
	return returnTable
end

local function CreateSearchBox(parent, sizeX, positionX, input_options, input_defaultOptionIndex)
	local returnTable = {}
	
	local options = input_options
	local reverse_options = options
	
	local defaultOptionIndex = #options - input_defaultOptionIndex + 1
	
	for i = 1, math.floor(#reverse_options / 2) do
		local j = #reverse_options - i + 1
		reverse_options[i], reverse_options[j] = reverse_options[j], reverse_options[i]
	end
	
	returnTable.CurrentValue = reverse_options[defaultOptionIndex]
	
	local frame = CreateFrame(parent, "SearchBox", 3, UDim2.new(0, sizeX, 1, 0), UDim2.new(0, positionX, 0, 0))
	frame.ImageColor3 = THEME.Background_Color_2
	frame.ZIndex = 2
	
	local searchIcon = Instance.new("ImageLabel", frame)
	searchIcon.Name = "SearchIcon"
	searchIcon.BackgroundTransparency = 1
	searchIcon.Image = "rbxassetid://4928842550"
	searchIcon.ImageColor3 = THEME.SearchIcon_Color
	searchIcon.Size = UDim2.new(0, parent.AbsoluteSize.Y, 0, parent.AbsoluteSize.Y - 1)
	searchIcon.Position = UDim2.new(0, 2, 0, 0)
	searchIcon.ZIndex = 2
	
	local searchBox = Instance.new("TextBox", frame)
	searchBox.Name = parent.Name .. "_SearchBox"
	searchBox.BorderSizePixel = 0
	searchBox.BackgroundTransparency = 1
	searchBox.ZIndex = 2
	
	searchBox.AnchorPoint = Vector2.new(1, 0)
	searchBox.Position = UDim2.new(1, 2, 0, 0)
	searchBox.Size = UDim2.new(1, -parent.AbsoluteSize.Y - 2, 1, 0)
	
	searchBox.Font = THEME.TextFont_SemiBold
	searchBox.Text = reverse_options[defaultOptionIndex]
	searchBox.TextSize = parent.AbsoluteSize.Y - 4
	searchBox.TextColor3 = THEME.TextColor
	searchBox.TextXAlignment = Enum.TextXAlignment.Left
	
	-- Script
	local suggestions = CreateFrame(parent, "Suggestions", 3, UDim2.new(0, sizeX, 0, 0), UDim2.new(0, positionX, 0, 0))
	suggestions.ImageColor3 = THEME.SearchBox_Suggestions_Background_Color
	suggestions.ZIndex = 2
	
	local suggestionsBorder = Instance.new("Frame", suggestions)
	suggestionsBorder.Size = UDim2.new(1, -2, 0, 1)
	suggestionsBorder.Position = UDim2.new(0, 1, 0, parent.AbsoluteSize.Y + 2)
	suggestionsBorder.BorderSizePixel = 0
	suggestionsBorder.BackgroundColor3 = THEME.SearchBox_SuggestionsBorder_Color
	suggestionsBorder.BackgroundTransparency = 1
	suggestionsBorder.ZIndex = 2
		
	local gradient = Instance.new("UIGradient", suggestionsBorder)
	gradient.Transparency = NumberSequence.new(
		{
			NumberSequenceKeypoint.new(0, 1),
			NumberSequenceKeypoint.new(0.1, 0),
			NumberSequenceKeypoint.new(0.9, 0),
			NumberSequenceKeypoint.new(1, 1)
		}
	)
	
	local focused = false
	local suggestionOptions = {}
	
	local currentValue = defaultOptionIndex
	local changedValue = false
	local overallHasChangedValue = false -- For return table
	
	local function Update()
		for _, v in pairs(suggestionOptions) do
			if v then
				v:Destroy()
			end
		end
		
		suggestionOptions = {}
		
		local shownSuggestions = {}
		
		if searchBox.Text == "" then
			shownSuggestions = reverse_options
		else
			for _, v in pairs(reverse_options) do
				if string.find(string.lower(v), string.lower(searchBox.Text)) then
					table.insert(shownSuggestions, v)
				end
			end
		end
		
		suggestions.Size = UDim2.new(0, sizeX, #shownSuggestions + 1, 8)
		
		if #shownSuggestions > 0 then
			suggestionsBorder.BackgroundTransparency = 0
			
			for i, v in pairs(shownSuggestions) do
				local positionId = (#shownSuggestions - i) + 1
				
				local newSuggestion = Instance.new("TextButton", suggestions)
				newSuggestion.Name = "Suggestion_" .. v
				newSuggestion.Text = ""
				newSuggestion.BackgroundTransparency = 1
				newSuggestion.Size = UDim2.new(1, 0, 0, searchBox.AbsoluteSize.Y)
				newSuggestion.Position = UDim2.new(0, 0, 0, ((positionId + 1) * searchBox.AbsoluteSize.Y + 2) - 12)
				newSuggestion.ZIndex = 101
				
				local newSuggestionText = Instance.new("TextLabel", newSuggestion)
				newSuggestionText.Name = "SuggestionText"
				newSuggestionText.AnchorPoint = Vector2.new(1, 0)
				newSuggestionText.Position = UDim2.new(1, 0, 0, 0)
				newSuggestionText.Size = searchBox.Size
				newSuggestionText.TextXAlignment = Enum.TextXAlignment.Left
				newSuggestionText.BackgroundTransparency = 1
				newSuggestionText.Font = THEME.TextFont_SemiBold
				newSuggestionText.TextColor3 = THEME.TextColor
				newSuggestionText.Text = v
				newSuggestionText.TextSize = parent.AbsoluteSize.Y - 4
				newSuggestionText.ZIndex = 101
				
				local icon = searchIcon:Clone()
				icon.Parent = newSuggestion
				icon.Position = UDim2.new(0, 2, 0, 0)
				icon.ZIndex = 101
				
				local suggestionId = Instance.new("IntValue", newSuggestion)
				suggestionId.Name = "SuggestionId"
				suggestionId.Value = i
				
				if newSuggestionText.TextFits == false then
					repeat
						newSuggestionText.Text = string.sub(newSuggestionText.Text, 1, string.len(newSuggestionText.Text) - 1) -- Remove one character until text fits
					until newSuggestionText.TextFits == true
					
					newSuggestionText.Text = string.sub(newSuggestionText.Text, 1, string.len(newSuggestionText.Text) - 2) -- Remove extra two characters
					newSuggestionText.Text = newSuggestionText.Text .. "..."
				end
				
				newSuggestion.MouseButton1Down:Connect(function()
					searchBox.Text = v
					Update()
					
					currentValue = i
					changedValue = true
					overallHasChangedValue = true
					
					returnTable.CurrentValue = v
				end)
				
				table.insert(suggestionOptions, newSuggestion)
			end
		end
	end
	
	searchBox.Focused:Connect(function()
		focused = true
		
		-- Change ZIndex
		suggestions.ZIndex = 100
		suggestionsBorder.ZIndex = 101
		searchIcon.ZIndex = 101
		searchBox.ZIndex = 101
		
		Update()
	end)
	
	searchBox.FocusLost:Connect(function(enter)
		changedValue = true
		focused = false
		
		game:GetService("RunService").RenderStepped:Wait()
		
		suggestions.Size = UDim2.new(0, sizeX, 1, 0)
		suggestionsBorder.BackgroundTransparency = 1
		
		-- Reset ZIndex
		suggestions.ZIndex = 2
		suggestionsBorder.ZIndex = 2
		searchIcon.ZIndex = 3
		searchBox.ZIndex = 3
		
		if enter then
			local topSuggestion = nil
			local topSuggestionY = 1000000
			
			for i, v in pairs(suggestions:GetChildren()) do
				if string.sub(v.Name, 1, 11) == "Suggestion_" then
					topSuggestion = v
					topSuggestionY = math.min(topSuggestionY, v.AbsolutePosition.Y)
				end
			end
			
			if topSuggestion then
				returnTable.CurrentValue = topSuggestion.SuggestionText.Text
				searchBox.Text = topSuggestion.SuggestionText.Text
			end
		end
		
		for _, v in pairs(suggestionOptions) do
			if v then
				v:Destroy()
			end
		end
		
		suggestionOptions = {}
	end)
	
	searchBox:GetPropertyChangedSignal("Text"):Connect(function()
		if changedValue == false then
			Update()
		else
			changedValue = false
		end
	end)
	
	
	function returnTable.ChangeOptions(newOptions)
		options = newOptions
		reverse_options = options
		
		for i = 1, math.floor(#reverse_options / 2) do
			local j = #reverse_options - i + 1
			reverse_options[i], reverse_options[j] = reverse_options[j], reverse_options[i]
		end
	end
	
	function returnTable.HasChangedValue()
		local hasChanged = overallHasChangedValue
		overallHasChangedValue = false
		
		return hasChanged
	end
	
	return returnTable
end

local function CreateTextBox(parent, sizeX, positionX, defaultText)
	local textBoxDefaultText = defaultText ~= nil and defaultText or "Enter Here"
	
	local background = CreateFrame(parent, "TextBoxBackground", 3, UDim2.new(0, sizeX, 1, 0), UDim2.new(0, positionX, 0, 0))
	background.ImageColor3 = THEME.TextBoxColor
	background.ZIndex = 1
	
	local textBox = Instance.new("TextBox", background)
	textBox.Name = "TextBox"
	textBox.Size = UDim2.new(1, 0, 1, 0)
	textBox.BackgroundTransparency = 1
	textBox.Font = THEME.TextFont_SemiBold
	textBox.TextSize = parent.AbsoluteSize.Y - 4
	textBox.TextColor3 = THEME.TextColor
	textBox.Text = textBoxDefaultText
	
	
	local changedValue = false
	
	textBox.FocusLost:Connect(function(enter)
		if enter then
			changedValue = true
		end
	end)
	
	local returnTable = {}
	returnTable.Object = textBox
	
	function returnTable.HasChangedValue()
		local v = changedValue
		changedValue = false
		
		return v
	end
	
	return returnTable
end

local function CreateList(parent, sizeY)
	local housing = Instance.new("Frame", parent)
	housing.Name = "ListBackground"
	housing.Size = UDim2.new(1, 0, 0, sizeY)
	housing.BackgroundTransparency = 1
	
	local background = CreateFrame(housing, "ListBackground", 4, UDim2.new(1, -22, 0, sizeY - 4), UDim2.new(0.5, -4, 0.5, 0), Vector2.new(0.5, 0.5))
	background.ImageColor3 = THEME.ListBackground
	background.ZIndex = 1
	
	local container = CreateScrollingFrame(background, "Container", UDim2.new(1, 0, 1, 0), UDim2.new(0, 0, 0, 0), nil)
	
	local uiListLayout = Instance.new("UIListLayout", background)
	uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	
	return container
end














local rng = Random.new()
local inputService = game:GetService("UserInputService")

-- Values
local aimbotEnabled = false

local freecamEngaged = false
local freecamVelocity = Vector3.new(0, 0, 0)
local freecamRotation = Vector2.new(0, 0)



-- Templates
local espHitboxImage_Template = Instance.new("ImageLabel")
espHitboxImage_Template.Name = "ESP_HitboxImage"
espHitboxImage_Template.Image = "rbxassetid://4835217542"
espHitboxImage_Template.ScaleType = Enum.ScaleType.Slice
espHitboxImage_Template.SliceCenter = Rect.new(4, 4, 508, 508)
espHitboxImage_Template.SliceScale = 0.5
espHitboxImage_Template.BackgroundTransparency = 1
espHitboxImage_Template.BorderSizePixel = 0
espHitboxImage_Template.AnchorPoint = Vector2.new(0.5, 0.5)

-- Other functions
local function RandomString(length)
	local str = ""
	local chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz01234567890"
	
	for i = 1, length do
		local index = rng:NextInteger(1, string.len(chars))
		str = str .. string.sub(chars, index, index)
	end
	
	return str
end

local function SendNotification(gui, title, text, playSound)
	if playSound then
		local sound = Instance.new("Sound", gui)
		sound.Name = RandomString(20)
		sound.SoundId = "rbxassetid://578970639"
		sound.Volume = 2.5
		sound:Play()
		
		game:GetService("Debris"):AddItem(sound, 2)
	end
	
	game.StarterGui:SetCore("SendNotification", {Title = title, Text = text})
end

local function GetFullName(object)
    local str = object.Name
    local obj = object

	local removeDot = false
    
    repeat
		str = obj.Parent.Name .. "." .. str
		
        obj = obj.Parent
    until obj.Parent == game
    
    return str
end

local function TextToNumber(text)
	return typeof(tonumber(text)) == "number" and tonumber(text) or 0
end

-- Gui Creation
local gui = CreateGui(guiParent, RandomString(20))

local mainFrame = CreateFrame(gui, RandomString(20), 4, UDim2.new(0, windowSize.X, 0, windowSize.Y))
local optionsContainer = CreateScrollingFrame(mainFrame, "Options_Container", UDim2.new(1, 0, 1, -22), UDim2.new(0, 0, 0, 22), nil, 2)

local mainFrame_DragHandle = CreateDragHandle(mainFrame, gui, RandomString(20), UDim2.new(1, 0, 0, 18), nil, nil, "Blackout")

-- ESP Category
AddPadding(optionsContainer, 14, "Toggles")

local option_ESP_Enabled = CreateOption(optionsContainer, RandomString(20), "ESP Enabled", 14)
local slider_ESP_Enabled = CreateSlider(option_ESP_Enabled, 130, 205, "True", "False", false)

local option_Info_Enabled = CreateOption(optionsContainer, RandomString(20), "Info Enabled", 14)
local slider_Info_Enabled = CreateSlider(option_Info_Enabled, 130, 205, "True", "False", true)

-- ESP
AddPadding(optionsContainer, 14, "ESP")

local option_NameTags_Enabled = CreateOption(optionsContainer, RandomString(20), "Name Tags Enabled", 14)
local slider_NameTags_Enabled = CreateSlider(option_NameTags_Enabled, 130, 205, "True", "False", true)

local option_FasterPlayerHitBoxes_Enabled = CreateOption(optionsContainer, RandomString(20), "Faster ESP For Players", 14)
local slider_FasterPlayerHitBoxes_Enabled = CreateSlider(option_FasterPlayerHitBoxes_Enabled, 130, 205, "True", "False", true)

-- ESP -> Tracers
AddPadding(optionsContainer, 14, "ESP -> Tracers")

local option_Tracers_Enabled = CreateOption(optionsContainer, RandomString(20), "Tracers Enabled", 14)
local slider_Tracers_Enabled = CreateSlider(option_Tracers_Enabled, 130, 205, "True", "False", false)

-- ESP -> Filters
AddPadding(optionsContainer, 14, "ESP -> Filters")

local option_HideUnreachablePrinters = CreateOption(optionsContainer, RandomString(20), "Hide Unreachable Printers", 14)
local slider_HideUnreachablePrinters = CreateSlider(option_HideUnreachablePrinters, 130, 205, "True", "False", true)

AddPadding(optionsContainer, 4, "")

local option_Players_Shown = CreateOption(optionsContainer, RandomString(20), "Players Shown", 14, true)
local slider_Players_Shown = CreateSlider(option_Players_Shown, 130, 205, "True", "False", true)

local option_Printers_Shown = CreateOption(optionsContainer, RandomString(20), "Printers Shown", 14, true)
local slider_Printers_Shown = CreateSlider(option_Printers_Shown, 130, 205, "True", "False", false)

local option_Entities_Shown = CreateOption(optionsContainer, RandomString(20), "Shipments/Items Shown", 14, false)
local slider_Entities_Shown = CreateSlider(option_Entities_Shown, 130, 205, "True", "False", false)

local option_Banks_Shown = CreateOption(optionsContainer, RandomString(20), "Banks Shown", 14, false)
local slider_Banks_Shown = CreateSlider(option_Banks_Shown, 130, 205, "True", "False", false)

local option_LootBoxes_Shown = CreateOption(optionsContainer, RandomString(20), "Loot Boxes Shown", 14, true)
local slider_LootBoxes_Shown = CreateSlider(option_LootBoxes_Shown, 130, 205, "True", "False", false)

local option_Materials_Shown = CreateOption(optionsContainer, RandomString(20), "Materials Shown", 14)
local slider_Materials_Shown = CreateSlider(option_Materials_Shown, 130, 205, "True", "False", false)

local option_Scavenges_Shown = CreateOption(optionsContainer, RandomString(20), "Scavenges Shown", 14)
local slider_Scavenges_Shown = CreateSlider(option_Scavenges_Shown, 130, 205, "True", "False", false)

local option_ScavengeStations_Shown = CreateOption(optionsContainer, RandomString(20), "Scavenge Stations Shown", 14)
local slider_ScavengeStations_Shown = CreateSlider(option_ScavengeStations_Shown, 130, 205, "True", "False", false)

local option_Dispensers_Shown = CreateOption(optionsContainer, RandomString(20), "Dispensers Shown", 14)
local slider_Dispensers_Shown = CreateSlider(option_Dispensers_Shown, 130, 205, "True", "False", false)

local option_Jukeboxes_Shown = CreateOption(optionsContainer, RandomString(20), "Jukeboxes Shown", 14, false)
local slider_Jukeboxes_Shown = CreateSlider(option_Jukeboxes_Shown, 130, 205, "True", "False", false)

local option_Vehicles_Shown = CreateOption(optionsContainer, RandomString(20), "Vehicles Shown", 14)
local slider_Vehicles_Shown = CreateSlider(option_Vehicles_Shown, 130, 205, "True", "False", false)

-- ESP -> Player Filters
AddPadding(optionsContainer, 14, "ESP -> Player Filters")

local option_PlayerFilter = CreateOption(optionsContainer, RandomString(20), "Player Filter", 14)
local textBox_PlayerFilter = CreateTextBox(option_PlayerFilter, 130, 205, "")

local option_RedNamesOnly = CreateOption(optionsContainer, RandomString(20), "Red Names Only", 14)
local slider_RedNamesOnly = CreateSlider(option_RedNamesOnly, 130, 205, "True", "False", false)

-- Aimbot
AddPadding(optionsContainer, 14, "Aimbot")

local option_Aimbot_Enabled = CreateOption(optionsContainer, RandomString(20), "Aimbot Enabled", 14)
local slider_Aimbot_Enabled = CreateSlider(option_Aimbot_Enabled, 130, 205, "True", "False", false)

local option_Aimbot_RedNamesOnly = CreateOption(optionsContainer, RandomString(20), "Red Names Only", 14)
local slider_Aimbot_RedNamesOnly = CreateSlider(option_Aimbot_RedNamesOnly, 130, 205, "True", "False", false)

-- Freecam
AddPadding(optionsContainer, 14, "Freecam")

local option_Freecam_Enabled = CreateOption(optionsContainer, RandomString(20), "Freecam Enabled", 14)
local slider_Freecam_Enabled = CreateSlider(option_Freecam_Enabled, 130, 205, "True", "False", false)

local option_Freecam_Speed = CreateOption(optionsContainer, RandomString(20), "Speed", 14)
local textBox_Freecam_Speed = CreateTextBox(option_Freecam_Speed, 130, 205, "100")

AddPadding(optionsContainer, 4)

local option_Freecam_TeleportHere = CreateOption(optionsContainer, RandomString(20), "Teleport To Camera", 14)
local button_Freecam_TeleportHere = CreateButton(option_Freecam_TeleportHere, 130, 205, "Teleport")

-- Notifications
AddPadding(optionsContainer, 14, "Notifications")

local option_Notification_PrinterSpawn = CreateOption(optionsContainer, RandomString(20), "Notify On Printer Spawn", 14)
local slider_Notification_PrinterSpawn = CreateSlider(option_Notification_PrinterSpawn, 130, 205, "True", "False", true)

-- Misc
AddPadding(optionsContainer, 14, "Miscellaneous")

local option_AllowItemsWhileHolding = CreateOption(optionsContainer, RandomString(20), "Force Backpack On", 14)
local slider_AllowItemsWhileHolding = CreateSlider(option_AllowItemsWhileHolding, 130, 205, "True", "False", true)

local option_Noclip_Enabled = CreateOption(optionsContainer, RandomString(20), "Noclip Enabled", 14)
local slider_Noclip_Enabled = CreateSlider(option_Noclip_Enabled, 130, 205, "True", "False", false)

local option_RemoveNLR = CreateOption(optionsContainer, RandomString(20), "Remove NLR", 14)
local button_RemoveNLR = CreateButton(option_RemoveNLR, 130, 205, "Remove")

-- Waypoints
AddPadding(optionsContainer, 14, "Waypoints")

local option_Waypoint_SetAtCamera = CreateOption(optionsContainer, RandomString(20), "Set waypoint at", 14)
local button_Waypoint_SetAtCamera = CreateButton(option_Waypoint_SetAtCamera, 130, 205, "Camera")

local option_Waypoint_SetAtCharacter = CreateOption(optionsContainer, RandomString(20), "", 14)
local button_Waypoint_SetAtCharacter = CreateButton(option_Waypoint_SetAtCharacter, 130, 205, "Character")

local waypoint_List = CreateList(optionsContainer, 120)

-- Statistics
AddPadding(optionsContainer, 14, "Statistics")

local _, stat_TotalPrinterMoneyLeft = CreateOption(optionsContainer, RandomString(20), "Printer Money Available: N/A", 14)

local _, stat_BasicPrinterCount = CreateOption(optionsContainer, RandomString(20), "Basic Printer Count: N/A", 14)
local _, stat_AdvancedPrinterCount = CreateOption(optionsContainer, RandomString(20), "Advanced Printer Count: N/A", 14)

-- Additional Messages
AddPadding(optionsContainer, 14, "Additional Notes")

local notes_Kazinium = CreateOption(optionsContainer, RandomString(20), "Kazinium is pissed.", 14)

-- Info at top of screen
local nodeOwnedByText = Instance.new("TextLabel", gui)
nodeOwnedByText.Name = RandomString(20)
nodeOwnedByText.Font = Enum.Font.Code
nodeOwnedByText.BackgroundTransparency = 1
nodeOwnedByText.Size = UDim2.new(1, 0, 0, 20)
nodeOwnedByText.Position = UDim2.new(0, 0, 0, 4)
nodeOwnedByText.TextColor3 = Color3.new(1, 1, 1)
nodeOwnedByText.TextSize = 14
nodeOwnedByText.Text = ""

local pictureSignIdRevealer = nodeOwnedByText:Clone()
pictureSignIdRevealer.Parent = gui
pictureSignIdRevealer.Name = RandomString(20)
pictureSignIdRevealer.Position = UDim2.new(0, 0, 0, 18)






-- Add functionality
local TEMP_STORAGE = Instance.new("Folder", gui)
TEMP_STORAGE.Name = RandomString(20)

-- Loop
local dt = 1 / 60
local step = 0


-- Disable Freecam when dead
local function AddCommasToNumber(n) -- credit http://richard.warburton.it
	local left, num, right = string.match(n, '^([^%d]*%d)(%d*)(.-)$')
	
	return left..(num:reverse():gsub('(%d%d%d)', '%1,'):reverse())..right
end

local function RemoveNLR()
	for _, v in pairs(workspace:GetChildren()) do
		if v.Name == "NL" then
			v:Destroy()
		end
	end
end

local function AddWaypointToList(list, name, position)
	local waypointContainer = Instance.new("Frame", list)
	waypointContainer.Name = name
	waypointContainer.Size = UDim2.new(1, 0, 0, 18)
	waypointContainer.BackgroundTransparency = 1
	
	local buttonFrame = CreateFrame(waypointContainer, "TitleFrame", 4, UDim2.new(0, 40, 1, -4), UDim2.new(1, -24, 0.5, 0), Vector2.new(1, 0.5))
	buttonFrame.ImageColor3 = Color3.new(THEME.ListBackground.r + 0.066666, THEME.ListBackground.g + 0.066666, THEME.ListBackground.b + 0.066666)
	
	local button = Instance.new("TextButton", buttonFrame)
	button.Name = "ButtonText"
	button.Font = THEME.TextFont_SemiBold
	button.TextSize = 12
	button.Size = UDim2.new(1, 0, 1, 0)
	button.Text = "Goto"
	button.BackgroundTransparency = 1
	button.TextColor3 = THEME.TextColor
	
	local closeButton = Instance.new("ImageButton", waypointContainer)
	closeButton.Name = "CloseButton"
	closeButton.Image = "rbxassetid://4389749368"
	closeButton.Size = UDim2.new(0, 9, 0, 9)
	closeButton.AnchorPoint = Vector2.new(0, 0.5)
	closeButton.BackgroundTransparency = 1
	closeButton.AutoButtonColor = false
	closeButton.Position = UDim2.new(1, -18, 0.5, 0)
	
	local title = Instance.new("TextBox", waypointContainer)
	title.Name = "Title"
	title.Text = name
	title.Font = THEME.TextFont_SemiBold
	title.TextSize = 12
	title.TextColor3 = THEME.TextColor
	title.Size = UDim2.new(1, -80, 1, 0)
	title.Position = UDim2.new(0, 4, 0, 0)
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.BackgroundTransparency = 1
	title.TextWrapped = true
	
	
	closeButton.MouseButton1Click:Connect(function()
		waypointContainer:Destroy()
	end)
	
	button.MouseButton1Click:Connect(function()
		if game.Players.LocalPlayer.Character then
			game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(position))
		end
	end)
	
	button.MouseEnter:Connect(function()
		buttonFrame.ImageColor3 = Color3.new(THEME.ListBackground.r + 0.033333, THEME.ListBackground.g + 0.033333, THEME.ListBackground.b + 0.033333)
	end)
	
	button.MouseLeave:Connect(function()
		buttonFrame.ImageColor3 = Color3.new(THEME.ListBackground.r + 0.066666, THEME.ListBackground.g + 0.066666, THEME.ListBackground.b + 0.066666)
	end)
end

if localPlayer.Character then
	wait()
	localPlayer.Character.Humanoid.Died:Connect(function()
		slider_Freecam_Enabled.ChangeValue(0)
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
	end)
end

localPlayer.CharacterAdded:Connect(function(char)
	wait()
	pcall(function()
		char.Humanoid.Died:Connect(function()
			slider_Freecam_Enabled.ChangeValue(0)
			workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		end)
	end)
end)

inputService.InputBegan:Connect(function(input)
	if scriptEnabled then
		if slider_Freecam_Enabled.GetValue() == "True" then
			if input.KeyCode == Enum.KeyCode.W then
				freecamVelocity = freecamVelocity + Vector3.new(0, 0, -1)
			elseif input.KeyCode == Enum.KeyCode.S then
				freecamVelocity = freecamVelocity + Vector3.new(0, 0, 1)
			elseif input.KeyCode == Enum.KeyCode.A then
				freecamVelocity = freecamVelocity + Vector3.new(-1, 0, 0)
			elseif input.KeyCode == Enum.KeyCode.D then
				freecamVelocity = freecamVelocity + Vector3.new(1, 0, 0)
			elseif input.KeyCode == Enum.KeyCode.Space then
				freecamVelocity = freecamVelocity + Vector3.new(0, 1, 0)
			elseif input.KeyCode == Enum.KeyCode.LeftShift then
				freecamVelocity = freecamVelocity + Vector3.new(0, -1, 0)
			end
		end
		
		if input.UserInputType == Enum.UserInputType.MouseButton2 then
			freecamEngaged = true
		end
		
		if input.KeyCode == aimbotKey and slider_Aimbot_Enabled.GetValue() == "True" then
			aimbotEnabled = true
			
			repeat
				local closestPart = nil
				local closestDistance = math.huge
				
				for _, p in pairs(game.Players:GetPlayers()) do
					if p.Character and p.Name ~= localPlayer.Name then
						if p.Character:FindFirstChild("Humanoid") then
							if p.Character:FindFirstChild("HumanoidRootPart") and p.Character.Humanoid.Health > 0 then
								local checked = false
								
								if slider_Aimbot_RedNamesOnly.GetValue() == "True" then
									if p.Character:FindFirstChild("NameTag") then
										if p.Character.NameTag.TextLabel.TextColor3 == Color3.fromRGB(255, 33, 33) then
											checked = true
										end
									end
								else
									checked = true
								end
								
								if checked then
									local camPos = workspace.CurrentCamera.CFrame.Position
									local targetPart = p.Character.HumanoidRootPart
									
									local a = workspace.CurrentCamera.CFrame.LookVector
									local b = -CFrame.new(workspace.CurrentCamera.CFrame.Position, targetPart.Position).LookVector
									
									local d = a:Dot(b)
									
									if d < closestDistance then
										closestDistance = d
										closestPart = targetPart
									end
								end
							end
						end
					end
				end
				
				if closestPart then
					workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, closestPart.Position)
				end
				
				game:GetService("RunService").RenderStepped:Wait()
			until aimbotEnabled == false
		end
	end
end)

inputService.InputEnded:Connect(function(input)
	if slider_Freecam_Enabled.GetValue() == "True" then
		if input.KeyCode == Enum.KeyCode.W then
			freecamVelocity = freecamVelocity - Vector3.new(0, 0, -1)
		elseif input.KeyCode == Enum.KeyCode.S then
			freecamVelocity = freecamVelocity - Vector3.new(0, 0, 1)
		elseif input.KeyCode == Enum.KeyCode.A then
			freecamVelocity = freecamVelocity - Vector3.new(-1, 0, 0)
		elseif input.KeyCode == Enum.KeyCode.D then
			freecamVelocity = freecamVelocity - Vector3.new(1, 0, 0)
		elseif input.KeyCode == Enum.KeyCode.Space then
			freecamVelocity = freecamVelocity - Vector3.new(0, 1, 0)
		elseif input.KeyCode == Enum.KeyCode.LeftShift then
			freecamVelocity = freecamVelocity - Vector3.new(0, -1, 0)
		end
	end
	
	if input.UserInputType == Enum.UserInputType.MouseButton2 then
		freecamEngaged = false
	end
	
	if input.KeyCode == aimbotKey then
		aimbotEnabled = false
	end
end)


-- Notify
if workspace:FindFirstChild("MoneyPrinters") then
	workspace.MoneyPrinters.ChildAdded:Connect(function(printer)
		if scriptEnabled then
			if slider_Notification_PrinterSpawn.GetValue() == "True" then
				pcall(function()
					if printer.Name == "Money Printer Basic" then
						SendNotification(gui, "Alert!", "A basic printer was spawned!", true)
					elseif printer.Name == "Money Printer Advanced" then
						SendNotification(gui, "Alert!", "An advanced printer was spawned!", true)
					end
				end)
			end
		end
	end)
end


-- Preset waypoints
AddWaypointToList(waypoint_List, "Pool Building Roof", Vector3.new(1180, 460.55, -900))
AddWaypointToList(waypoint_List, "Grape Vines", Vector3.new(1255, 288, -1982))
AddWaypointToList(waypoint_List, "Tree at Spawn", Vector3.new(-405.2, 195.8, 131.6))

while scriptEnabled do
	step = step + 1
	
	-- Clear temp storage
	for _, v in pairs(TEMP_STORAGE:GetChildren()) do
		v:Destroy()
	end
	
	-- Allow yourself to hold items even if you are are holding something like a printer
	if slider_AllowItemsWhileHolding.GetValue() == "True" then
		game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
	end
	
	-- Enable noclip
	if slider_Noclip_Enabled.GetValue() == "True" then
		if localPlayer.Character then
			if localPlayer.Character:FindFirstChild("Humanoid") then
				localPlayer.Character.Humanoid:ChangeState(11)
			end
		end
	end
	
	
	
	-- ESP
	if slider_ESP_Enabled.GetValue() == "True" then
		local PROFILES = {}
		
		-- Players
		if slider_Players_Shown.GetValue() == "True" then
			for _, plr in pairs(game.Players:GetPlayers()) do
				if plr.Character and plr ~= localPlayer then
					local humanoid = plr.Character:FindFirstChild("Humanoid")
					
					if humanoid then
						if humanoid.Health > 0 then
							if not plr.Character:FindFirstChild("ESP_Hitbox_Model") then
								local model = Instance.new("Model", plr.Character)
								model.Name = "ESP_Hitbox_Model"
								
								local box = Instance.new("Part", model)
								box.Name = "ESP_Hitbox"
								box.Size = Vector3.new(4, 5, 2)
								box.CFrame = plr.Character.HumanoidRootPart.CFrame * CFrame.new(0, -0.25, 0)
								box.Transparency = 1
								box.CanCollide = false
								box.Massless = true
								
								local weld = Instance.new("WeldConstraint", box)
								weld.Part0 = plr.Character.HumanoidRootPart
								weld.Part1 = box
							end
							
							
							local profile = {}
							profile.Name = plr.Name
							
							if slider_FasterPlayerHitBoxes_Enabled.GetValue() == "True" then
								profile.Model = plr.Character.ESP_Hitbox_Model
								profile.Parts = {plr.Character.ESP_Hitbox_Model.ESP_Hitbox}
							else
								profile.Model = plr.Character
								profile.Parts = plr.Character:GetDescendants()
							end
							
							profile.AdditionalText = ""
							
							if plr:FindFirstChild("PlayerData") then
								local plrData = plr.PlayerData
								
								local currency = plrData.Currency.Value
								local aureus = plrData.PCurrency.Value
								local karma = plrData.Karma.Value
								
								profile.AdditionalText = profile.AdditionalText .. "[ Money: " .. tostring(currency) .. " ]"
								profile.AdditionalText = profile.AdditionalText .. "[ Aureus: " .. tostring(aureus) .. " ]"
								profile.AdditionalText = profile.AdditionalText .. "[ Karma: " .. tostring(karma) .. " ]"
							end
							
							if plr.Character:FindFirstChild("NameTag") then
								local tag = plr.Character.NameTag
								
								if tag:FindFirstChild("TextLabel") then
									local color = tag.TextLabel.TextColor3
									
									profile.TextColor = color
								end
							end
							
							-- Filtering
							local checked = true
							
							if string.len(textBox_PlayerFilter.Object.Text) > 0 then
								if not string.find(string.lower(plr.Name), string.lower(textBox_PlayerFilter.Object.Text)) then
									checked = false
								end
							end
							
							if slider_RedNamesOnly.GetValue() == "True" then
								if plr.Character then
									if plr.Character:FindFirstChild("NameTag") then
										if plr.Character.NameTag.TextLabel.TextColor3 ~= Color3.fromRGB(255, 33, 33) then
											checked = false
										end
									end
								end
							end
							
							if checked then
								table.insert(PROFILES, profile)
							end
						end
					end
				end
			end
		end
		
		-- Electric State
		if game.PlaceId == 2262441883 then
			-- Update statistics
			if workspace:FindFirstChild("MoneyPrinters") then
				local basicPrinterCount = 0
				local advancedPrinterCount = 0
				local printerMoneyLeftToPrint = 0
				local printerMoneyAlreadyPrinted = 0
				
				for _, entity in pairs(workspace.MoneyPrinters:GetChildren()) do
					local skip = false
					if entity:FindFirstChild("Main") and slider_HideUnreachablePrinters.GetValue() == "True" then
						if entity.Main.CFrame.Position == Vector3.new(0, -1000000, 0) or math.abs(entity.Main.CFrame.Position.Y - 12.5) < 1 and entity.Main.CFrame.Position.Y < 1300 then
							skip = true
						end
					end
					
					if skip == false then
						if entity.Name == "Money Printer Basic" then
							basicPrinterCount = basicPrinterCount + 1
						elseif entity.Name == "Money Printer Advanced" then
							advancedPrinterCount = advancedPrinterCount + 1
						end
						
						-- Money
						pcall(function()
							local child = "NIL"
							
							if entity:FindFirstChild("Int") then
								child = "Int"
							elseif entity:FindFirstChild("Int2") then
								child = "Int2"
							end
							
							if child ~= "NIL" then
								local powerMultiplier = 1
								
								if entity.PowerLevel.Value == 3 then
									powerMultiplier = 0.3
								end
								
								if entity.Name == "Money Printer Basic" then
									printerMoneyLeftToPrint = printerMoneyLeftToPrint + (entity[child].Uses.Value * 280 * powerMultiplier)
									printerMoneyAlreadyPrinted = printerMoneyAlreadyPrinted + entity[child].Money.Value
								elseif entity.Name == "Money Printer Advanced" then
									printerMoneyLeftToPrint = printerMoneyLeftToPrint + (entity[child].Uses.Value * 1400 * powerMultiplier)
									printerMoneyAlreadyPrinted = printerMoneyAlreadyPrinted + entity[child].Money.Value
								end
							end
						end)
					end
				end
				
				stat_TotalPrinterMoneyLeft.Text = "Printer Money Available: " .. AddCommasToNumber(printerMoneyAlreadyPrinted)
				
				stat_BasicPrinterCount.Text = "Basic Printer Count: " .. AddCommasToNumber(basicPrinterCount)
				stat_AdvancedPrinterCount.Text = "Advanced Printer Count: " .. AddCommasToNumber(advancedPrinterCount)
			end
			
			-- Printers
			if slider_Printers_Shown.GetValue() == "True" then
				if workspace:FindFirstChild("MoneyPrinters") then
					for _, entity in pairs(workspace.MoneyPrinters:GetChildren()) do
						local profile = {}
						profile.Name = entity.Name
						profile.Parts = entity:GetDescendants()
						profile.Model = entity
						profile.TextColor = Color3.fromRGB(70, 180, 70)
						
						profile.AdditionalText = ""
						
						local skip = false
						if entity:FindFirstChild("Main") and slider_HideUnreachablePrinters.GetValue() == "True" then
							if entity.Main.CFrame.Position == Vector3.new(0, -1000000, 0) or math.abs(entity.Main.CFrame.Position.Y - 12.5) < 1 then
								skip = true
							end
						end
						
						if skip == false then
							local child = "NIL"
							
							if entity:FindFirstChild("Int") then
								child = "Int"
							elseif entity:FindFirstChild("Int2") then
								child = "Int2"
							end
							
							if child ~= "NIL" then
								profile.AdditionalText = "[ " .. entity[child].Money.Value .. " money left ][ " .. entity[child].Uses.Value .. " uses left ]"
								
								if entity.TrueOwner.Locked.Value == false then
									profile.AdditionalText = profile.AdditionalText .. "[ UNLOCKED ]"
								else
									profile.AdditionalText = profile.AdditionalText .. "[ LOCKED ]"
								end
							end
							
							table.insert(PROFILES, profile)
						end
					end
				end
			end
			
			-- Entities
			if slider_Entities_Shown.GetValue() == "True" then
				if workspace:FindFirstChild("Entities") then
					for _, entity in pairs(workspace.Entities:GetChildren()) do
						pcall(function()
							if entity:GetPrimaryPartCFrame().Position.Y > 82 then
								local profile = {}
								profile.Parts = entity:GetDescendants()
								profile.Model = entity
								
								profile.AdditionalText = ""
								
								
								local child = "NIL"
								
								if entity:FindFirstChild("Int") then
									child = "Int"
								elseif entity:FindFirstChild("Int2") then
									child = "Int2"
								end
								
								if entity.Name == "Gun" then
									profile.Name = entity[child].Value
									
									if entity[child]:FindFirstChild("Uses") then
										profile.AdditionalText = "[ " .. entity[child].Uses.Value .. " left ]"
									end
								else
									profile.Name = entity.Name
									
									if entity[child]:FindFirstChild("Uses") then
										profile.AdditionalText = "[ " .. entity[child].Uses.Value .. " left ]"
									end
								end
								
								if entity:FindFirstChild("TrueOwner") then
									if entity.TrueOwner.Locked.Value == false then
										profile.AdditionalText = profile.AdditionalText .. "[ UNLOCKED ]"
									else
										profile.AdditionalText = profile.AdditionalText .. "[ LOCKED ]"
									end
								end
								
								table.insert(PROFILES, profile)
							end
						end)
					end
				end
			end
			
			-- Banks
			if slider_Banks_Shown.GetValue() == "True" then
				if workspace:FindFirstChild("Buildings") then
					for _, building in pairs(workspace.Buildings:GetChildren()) do
						for _, bank in pairs(building:GetChildren()) do
							if bank.Name == "Banker Vault" then
								local profile = {}
								profile.Name = "Bank"
								profile.Model = bank
								
								profile.Type = "Other"
								profile.AdditionalText = ""
								
								table.insert(PROFILES, profile)
							end
						end
					end
				end
			end
			
			-- Loot Boxes
			if slider_LootBoxes_Shown.GetValue() == "True" then
				if workspace:FindFirstChild("Loot") then
					for _, entity in pairs(workspace.Loot:GetChildren()) do
						local profile = {}
						profile.Name = entity.Name
						profile.Parts = entity:GetDescendants()
						profile.Model = entity
						
						profile.Type = "Other"
						profile.AdditionalText = ""
						
						table.insert(PROFILES, profile)
					end
				end
			end
			
			-- Materials
			if slider_Materials_Shown.GetValue() == "True" then
				if workspace:FindFirstChild("Materials") then
					for _, entity in pairs(workspace.Materials:GetChildren()) do
						local profile = {}
						profile.Name = entity.Name
						profile.Parts = entity:GetDescendants()
						profile.Model = entity
						
						profile.Type = "Other"
						profile.AdditionalText = ""
						
						if entity:FindFirstChild("TrueOwner") then
							if entity.TrueOwner.Locked.Value == false then
								profile.AdditionalText = profile.AdditionalText .. "[ UNLOCKED ]"
							else
								profile.AdditionalText = profile.AdditionalText .. "[ LOCKED ]"
							end
						end
						
						table.insert(PROFILES, profile)
					end
				end
			end
			
			-- Scavenges
			if slider_Scavenges_Shown.GetValue() == "True" then
				if workspace:FindFirstChild("Scavage") then
					for _, entity in pairs(workspace.Scavage:GetChildren()) do
						local profile = {}
						profile.Name = entity.Name
						profile.Parts = entity:GetDescendants()
						profile.Model = entity
						
						profile.Type = "Other"
						profile.AdditionalText = ""
						
						table.insert(PROFILES, profile)
					end
				end
			end
			
			-- Scavenge Station
			if slider_ScavengeStations_Shown.GetValue() == "True" then
				if workspace:FindFirstChild("Buildings") then
					for _, building in pairs(workspace.Buildings:GetChildren()) do
						for _, station in pairs(building:GetChildren()) do
							if station.Name == "Scavenge Station" then
								local profile = {}
								profile.Name = "Scavenge Station"
								profile.Model = station
								
								profile.Type = "Other"
								profile.AdditionalText = ""
								
								table.insert(PROFILES, profile)
							end
						end
					end
				end
			end
			
			-- Dispensers
			if slider_Dispensers_Shown.GetValue() == "True" then
				if workspace:FindFirstChild("Buildings") then
					for _, building in pairs(workspace.Buildings:GetChildren()) do
						for _, dispenser in pairs(building:GetChildren()) do
							if dispenser.Name == "Dispencer" then
								local profile = {}
								profile.Name = "Dispenser"
								profile.Model = dispenser
								
								profile.Type = "Other"
								profile.AdditionalText = ""
								
								if dispenser:FindFirstChild("Dispencer") then
									if string.len(dispenser.Dispencer.Value) == 0 then
										profile.AdditionalText = profile.AdditionalText .. "[ EMPTY ]"
									else
										profile.AdditionalText = profile.AdditionalText .. "[ " .. dispenser.Dispencer.Value .. " ][ Price: " .. dispenser.Dispencer.Price.Value .. " ][ " .. dispenser.Dispencer.Count.Value .. " left ]"
									end
								end
								
								table.insert(PROFILES, profile)
							end
						end
					end
				end
			end
			
			-- Jukeboxes
			if slider_Jukeboxes_Shown.GetValue() == "True" then
				if workspace:FindFirstChild("Buildings") then
					for _, building in pairs(workspace.Buildings:GetChildren()) do
						for _, jukebox in pairs(building:GetChildren()) do
							if jukebox.Name == "Jukebox" then
								local profile = {}
								profile.Name = "Jukebox"
								profile.Model = jukebox
								
								profile.Type = "Other"
								profile.AdditionalText = ""
								
								local soundId = tostring(jukebox.Speaker.Sound.SoundId)
								profile.AdditionalText = profile.AdditionalText .. "[ SoundId: " .. string.sub(soundId, 14, string.len(soundId)) .. " ]"
								
								table.insert(PROFILES, profile)
							end
						end
					end
				end
			end
			
			-- Vehicles
			if slider_Vehicles_Shown.GetValue() == "True" then
				if workspace:FindFirstChild("Vehicles") then
					for _, entity in pairs(workspace.Vehicles:GetChildren()) do
						local profile = {}
						profile.Name = entity.Name
						profile.Parts = entity:GetDescendants()
						profile.Model = entity
						
						profile.Type = "Other"
						profile.AdditionalText = ""
						
						
						if entity:FindFirstChild("TrueOwner") then
							if entity.TrueOwner.Value ~= nil then
								profile.AdditionalText = profile.AdditionalText .. "[ Owner: " .. entity.TrueOwner.Value.Name .. " ]"
								
								if entity:FindFirstChild("TrueOwner") then
									if entity.TrueOwner.Locked.Value == false then
										profile.AdditionalText = profile.AdditionalText .. "[ UNLOCKED ]"
									else
										profile.AdditionalText = profile.AdditionalText .. "[ LOCKED ]"
									end
								end
							end
						end
						
						table.insert(PROFILES, profile)
					end
				end
			end
		end
		
		-- Refresh
		for _, profile in pairs(PROFILES) do
			-- Char Info
			local profile_Name = profile.Name
			local profile_Model = profile.Model
			local profile_Parts = profile.Parts
			local profile_Type = profile.Type
			
			local profile_BasepartsCount = 0
			
			
			if profile_Parts then
				for _, x in pairs(profile_Parts) do
					if x:IsA("BasePart") then
						profile_BasepartsCount = profile_BasepartsCount + 1
					end
				end
			end
			
			local BB_Position, BB_Size = profile_Model:GetBoundingBox()
			BB_Size = BB_Size / 2
			
			local distanceToProfile = (BB_Position.Position - workspace.CurrentCamera.CFrame.Position).Magnitude
			
			
			-- ESP
			if slider_Tracers_Enabled.GetValue() == "True" then
				if localPlayer.Character then
					local xSize = workspace.CurrentCamera.ViewportSize.X
					local ySize = workspace.CurrentCamera.ViewportSize.Y - 36
					
					local p1 = workspace.CurrentCamera:WorldToScreenPoint(workspace.CurrentCamera:ScreenPointToRay(xSize / 2, ySize).Origin)
					local p2, onScreen = workspace.CurrentCamera:WorldToScreenPoint(BB_Position.Position)
					
					p1 = Vector2.new(p1.X, p1.Y)
					p2 = Vector2.new(p2.X, p2.Y)
					
					if onScreen then
						local v = p2 - p1
						local v2 = v / 2
						
						local line = Instance.new("Frame", TEMP_STORAGE)
						line.Name = "Line"
						line.BackgroundColor3 = Color3.new(1, 1, 1)
						line.BackgroundTransparency = 0.4
						line.BorderSizePixel = 0
						line.Size = UDim2.new(0, v.Magnitude + 1, 0, 1) -- LAST VALUE IS THICKNESS
						line.Position = UDim2.new(((p1.X + (v.X / 2)) - (line.AbsoluteSize.X / 2)) / xSize, 0, 
												  ((p1.Y + (v.Y / 2)) - (line.AbsoluteSize.Y / 2)) / ySize, 0)
						line.Rotation = math.deg(math.atan2(v.Y, v.X))
					end
				end
			end
			
			local p1 = workspace.CurrentCamera:WorldToScreenPoint(BB_Position.Position)
			local p2 = Vector2.new(p1.X, -math.huge)
			
			local s = BB_Size
			
			-- ESP Hitbox
			local min = Vector2.new(math.huge, math.huge)
			local max = Vector2.new(-math.huge, -math.huge)
			
			local t = {}
			local totalOnScreen = true
			
			local c1 = BB_Position * CFrame.new(s.X, s.Y, s.Z).Position
			local c2 = BB_Position * CFrame.new(-s.X, s.Y, s.Z).Position
			local c3 = BB_Position * CFrame.new(-s.X, s.Y, -s.Z).Position
			local c4 = BB_Position * CFrame.new(s.X, s.Y, -s.Z).Position
			
			local c5 = BB_Position * CFrame.new(s.X, -s.Y, s.Z).Position
			local c6 = BB_Position * CFrame.new(-s.X, -s.Y, s.Z).Position
			local c7 = BB_Position * CFrame.new(-s.X, -s.Y, -s.Z).Position
			local c8 = BB_Position * CFrame.new(s.X, -s.Y, -s.Z).Position
			
			t = {c1, c2, c3, c4, c5, c6, c7, c8}
			
			for _, v in pairs(t) do
				local pos, onScreen = workspace.CurrentCamera:WorldToScreenPoint(v)
				
				min = Vector2.new(math.min(min.X, pos.X), math.min(min.Y, pos.Y))
				max = Vector2.new(math.max(max.X, pos.X), math.max(max.Y, pos.Y))
				
				if onScreen == false then
					totalOnScreen = false
				end
			end
			
			if totalOnScreen then
				local size = max - min
				local center = (max + min) / 2
				
				local box = espHitboxImage_Template:Clone()
				box.Parent = TEMP_STORAGE
				box.Size = UDim2.new(0, size.X, 0, size.Y)
				box.Position = UDim2.new(0, center.X, 0, center.Y)
				box.ImageColor3 = Color3.new(1, 1, 1)
				box.ImageTransparency = 0
				box.SliceScale = 1 / 4 -- SYNTAX: [THICKNESS] / 4
			end
			
			-- Stats
			if slider_NameTags_Enabled.GetValue() == "True" then
				local onScreenTotal = true
				
				for _, v in pairs(t) do
					local pos, onScreen = workspace.CurrentCamera:WorldToScreenPoint(v)
					p2 = Vector2.new(p1.X, math.max(p2.Y, pos.Y))
					
					if onScreen == false then
						onScreenTotal = false
					end
				end
				
				if onScreenTotal then
					p2 = p2 + Vector2.new(0, 10)
					
					local label = Instance.new("TextLabel", TEMP_STORAGE)
					label.Name = "NameLabel"
					label.BackgroundTransparency = 1
					label.Active = false
					label.AnchorPoint = Vector2.new(0.5, 0.5)
					label.Font = Enum.Font.GothamSemibold
					label.TextColor3 = Color3.new(1, 1, 1)
					label.TextSize = 9
					
					local addText = profile.AdditionalText ~= nil and profile.AdditionalText or ""
					
					label.Text = "[ " .. profile_Name .. " ][ " .. math.floor(distanceToProfile) .. " studs ]" .. addText
					
					label.Size = UDim2.new(0, 500, 0, 20)
					label.Position = UDim2.new(0, p2.X, 0, p2.Y)
					
					if profile.TextColor ~= nil then
						label.TextColor3 = profile.TextColor
					else
						label.TextColor3 = Color3.new(1, 1, 1)
					end
				end
			end
		end
	end
	
	-- Freecam
	local freecamEnabled = slider_Freecam_Enabled.GetValue()
	local cam = workspace.CurrentCamera
	
	if slider_Freecam_Enabled.ValueChanged() then
		-- State Changed
		
		if freecamEnabled == "False" then
			freecamVelocity = Vector3.new(0, 0, 0)
			cam.CameraType = Enum.CameraType.Custom
			
			game:GetService("ContextActionService"):BindActionAtPriority("WASDKeys", function() return Enum.ContextActionResult.Pass end, false, Enum.ContextActionPriority.High.Value, Enum.KeyCode.W, Enum.KeyCode.A, Enum.KeyCode.S, Enum.KeyCode.D, Enum.KeyCode.LeftShift, Enum.KeyCode.Space)
		elseif freecamEnabled == "True" then
			local c = cam.CFrame
			cam.CameraType = Enum.CameraType.Scriptable
			cam.CFrame = c
			
			game:GetService("ContextActionService"):BindActionAtPriority("WASDKeys", function() return Enum.ContextActionResult.Sink end, false, Enum.ContextActionPriority.High.Value, Enum.KeyCode.W, Enum.KeyCode.A, Enum.KeyCode.S, Enum.KeyCode.D, Enum.KeyCode.LeftShift, Enum.KeyCode.Space)
		end
	end
	
	if freecamEnabled == "True" then
		if freecamEngaged then
			inputService.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition
			
			local delta = inputService:GetMouseDelta()
			local sens = inputService.MouseDeltaSensitivity
			
			local x = delta.X * (sens * sens * 15)
			local y = delta.Y * (sens * sens * 15)
			
			freecamRotation = freecamRotation + Vector2.new(math.rad(x), math.rad(y))
		else
			inputService.MouseBehavior = Enum.MouseBehavior.Default
		end
		
		
		local speed = TextToNumber(textBox_Freecam_Speed.Object.Text)
		
		cam.CFrame = cam.CFrame * CFrame.new(freecamVelocity.Unit * dt * speed)
		cam.CFrame = CFrame.new(cam.CFrame.Position) * CFrame.fromOrientation(-math.rad(freecamRotation.Y), -math.rad(freecamRotation.X), 0)
	end
	
	-- Set waypoint
	if button_Waypoint_SetAtCamera.WasClicked() then
		AddWaypointToList(waypoint_List, "New Camera Waypoint", workspace.CurrentCamera.CFrame.Position)
	end
	
	if button_Waypoint_SetAtCharacter.WasClicked() then
		if localPlayer.Character then
			pcall(function()
				AddWaypointToList(waypoint_List, "New Character Waypoint", localPlayer.Character:GetPrimaryPartCFrame().Position)
			end)
		end
	end
	
	-- Teleport to camera
	if button_Freecam_TeleportHere.WasClicked() then
		if localPlayer.Character then
			localPlayer.Character:SetPrimaryPartCFrame(workspace.CurrentCamera.CFrame)
		end
	end
	
	-- Remove NLR
	if button_RemoveNLR.WasClicked() then
		RemoveNLR()
	end
	
	-- Info at top of screen
	do
		if slider_Info_Enabled.GetValue() == "True" then
			nodeOwnedByText.TextTransparency = 0
			pictureSignIdRevealer.TextTransparency = 0
			
			pcall(function()
				local p = localPlayerMouse.Target
				
				nodeOwnedByText.Text = "Node Owner: N/A"
				pictureSignIdRevealer.Text = "Picture Id: N/A"
				
				if p then
					if p.Parent then
						if p.Parent.Name == "Picture Sign 1" or p.Parent.Name == "Picture Sign 2" then
							pictureSignIdRevealer.Text = "Picture Id: " .. p.Parent.Part.SurfaceGui["1"].Image
						end
					end
					
					for _, v in pairs(game.Players:GetPlayers()) do
						local fullName = GetFullName(p)
						
						if string.find(fullName, v.Name) and string.find(fullName, "Buildings") then
							nodeOwnedByText.Text = "Node Owner: " .. v.Name
							
							break
						end
					end
				end
			end)
		else
			nodeOwnedByText.TextTransparency = 1
			pictureSignIdRevealer.TextTransparency = 1
		end
	end
	
	
	dt = game:GetService("RunService").RenderStepped:Wait()
end

-- Cleanup
workspace.CurrentCamera.CameraType = Enum.CameraType.Custom

nodeOwnedByText:Destroy()
pictureSignIdRevealer:Destroy()
